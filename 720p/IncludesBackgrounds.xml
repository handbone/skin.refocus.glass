<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="global_Background">
		<control type="group">
			<include>transition_Background</include>
			<control type="image">
				<include>screen_Dimensions</include>
				<include>toggle_Menu</include>
				<texture background="true">$VAR[global_Background]</texture>
				<visible>!Skin.HasSetting(fanart.global) + IsEmpty(ListItem.Property(Fanart_Image)) + ![Player.HasVideo + Skin.HasSetting(backgroundvideo.global)]</visible>
				<fadetime>fadetime_Fanart</fadetime>
			</control>
			<control type="image">
				<include>screen_Dimensions</include>
				<include>toggle_Menu</include>
				<texture background="true">$INFO[ListItem.Property(Fanart_Image)]</texture>
				<visible>!Skin.HasSetting(fanart.global) + !IsEmpty(ListItem.Property(Fanart_Image)) + ![Player.HasVideo + Skin.HasSetting(backgroundvideo.global)] + !Control.IsVisible(531) + !Control.IsVisible(532) + !Control.IsVisible(596)</visible>
				<include>fadeinout</include>
				<fadetime>fadetime_Fanart</fadetime>						
			</control>
			<!--use the fanart image of the first real item in the list as a fallback for the "parent folder" entry. seasons and episodes level only.-->
			<control type="image">
				<include>screen_Dimensions</include>
				<include>toggle_Menu</include>
				<texture background="true">$INFO[Container().ListItem(1).Property(Fanart_Image)]</texture>
				<visible>StringCompare(Listitem.Icon,DefaultFolderBack.png) + [Container.Content(seasons) | Container.Content(episodes)] + !Skin.HasSetting(fanart.global) + ![Player.HasVideo + Skin.HasSetting(backgroundvideo.global)] + !Control.IsVisible(531)</visible>
				<fadetime>fadetime_Fanart</fadetime>
			</control>
			<control type="multiimage" id="7890">
                <include>screen_Dimensions</include>
                <imagepath background="true">$VAR[extrafanart.path]</imagepath>
                <aspectratio align="center">scale</aspectratio>
                <timeperimage>9000</timeperimage>
                <randomize>true</randomize>
                <fadetime>5</fadetime>					
                <loop>yes</loop>                       
                <visible>[!Control.IsVisible(53) + !Control.IsVisible(532) + !Control.IsVisible(571)  + !Control.IsVisible(591) + !Control.IsVisible(596) + !SubString(Container.FolderPath,plugin://)] + Skin.HasSetting(fanart.extra) + !IsEmpty(ListItem.Title) + Skin.HasSetting(fanart.global)</visible>
                </control>
		<!--playing video background-->
			<control type="group">
				<visible>Skin.HasSetting(backgroundvideo.global) + Player.HasVideo + !Window.IsActive(weather)</visible>
				<control type="image">
					<aspectratio>stretch</aspectratio>
					<include>screen_Dimensions</include>
					<texture>black.png</texture>
				</control>
				<control type="videowindow">
					<include>screen_Dimensions</include>
					<visible>![Window.IsActive(pictures) + Control.IsVisible(531)]</visible>
				</control>
			</control>
		</control>
		<!--new opacity controls-->
		<control type="group">
			<control type="group">
			<visible>Skin.HasSetting(background.opacitymediaonly)</visible>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_100.png</texture>
					<visible>Skin.String(background.opacity,100) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_90.png</texture>
					<visible>Skin.String(background.opacity,90) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_80.png</texture>
					<visible>Skin.String(background.opacity,80) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_70.png</texture>
					<visible>Skin.String(background.opacity,70) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_60.png</texture>
					<visible>Skin.String(background.opacity,60) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_50.png</texture>
					<visible>Skin.String(background.opacity,50) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_40.png</texture>
					<visible>Skin.String(background.opacity,40) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_30.png</texture>
					<visible>Skin.String(background.opacity,30) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_20.png</texture>
					<visible>Skin.String(background.opacity,20) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
								
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/base_color_refocus.png</texture>
					<visible>Skin.String(background.opacity,refocus) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
					<colordiffuse>colorrefocus</colordiffuse> 
				</control>				
				<!--global background default opacity-->
				<control type="image">
					<aspectratio>stretch</aspectratio>
					<include>screen_Dimensions</include>
					<texture background="true">overlays/base_color.png</texture>
					<visible>[![Window.IsActive(Pictures) + Control.IsVisible(531)] + !Window.IsActive(Visualisation)] + !Window.IsActive(Weather) + !Skin.HasSetting(fanart.global)] | [[![Container.Content(movies) | Container.Content(tvshows) | Container.Content(songs) | Container.Content(artists) | Container.Content(albums) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(musicvideos) | Container.Content(genres) | Container.Content(years) | Container.Content(actors) | Container.Content(playlists) | Container.Content(plugins) | Window.IsActive(63) | Container.Content(studios) | Container.Content(directors)] + Skin.HasSetting(background.opacity.enabled)] + ![Window.IsActive(2) + Control.IsVisible(531)] + !Window.IsActive(2006) + !Window.IsActive(weather) + [!Control.IsVisible(550) + !Control.IsVisible(551)] | Window.IsActive(2003)]</visible>
					<colordiffuse>base_1</colordiffuse> 
					<include>transition_BG</include>
				</control>
				<!--vignette default opacity-->
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/base_color.png</texture>
					<colordiffuse>base_1</colordiffuse> 
					<visible>![Window.IsActive(2) + Control.IsVisible(531)] + !Window.IsActive(2006) + Skin.HasSetting(fanart.global.alt)</visible>
					<include>transition_BG</include>
					</control>
				</control>				
			</control>
			<control type="group">
			<visible>!Skin.HasSetting(background.opacitymediaonly)</visible>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_100.png</texture>
					<visible>Skin.String(background.opacity,100) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_90.png</texture>
					<visible>Skin.String(background.opacity,90) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_80.png</texture>
					<visible>Skin.String(background.opacity,80) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_70.png</texture>
					<visible>Skin.String(background.opacity,70) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_60.png</texture>
					<visible>Skin.String(background.opacity,60) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_50.png</texture>
					<visible>Skin.String(background.opacity,50) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_40.png</texture>
					<visible>Skin.String(background.opacity,40) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_30.png</texture>
					<visible>Skin.String(background.opacity,30) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/opacity/vignette2_20.png</texture>
					<visible>Skin.String(background.opacity,20) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
				</control>

				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/base_color_refocus.png</texture>
					<visible>Skin.String(background.opacity,refocus) + Skin.HasSetting(background.opacity.enabled)</visible>
					<include>transition_Toast</include>
					<colordiffuse>colorrefocus</colordiffuse> 
				</control>	

				
				<!--global background default opacity-->
				<control type="image">
					<aspectratio>stretch</aspectratio>
					<include>screen_Dimensions</include>
					<texture background="true">overlays/background.png</texture>
					<colordiffuse>base_1</colordiffuse> 
					<colordiffuse>$VAR[global_background.Opacity]</colordiffuse>
					<visible>[!Skin.HasSetting(fanart.global)] | [[![Container.Content(movies) | Container.Content(tvshows) | Container.Content(songs) | Container.Content(artists) | Container.Content(albums) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(musicvideos) | Container.Content(genres) | Container.Content(years) | Container.Content(actors) | Container.Content(playlists) | Container.Content(plugins) | Window.IsActive(63) | Container.Content(studios) | Container.Content(directors)] + Skin.HasSetting(background.opacity.enabled)] + ![Window.IsActive(2) + Control.IsVisible(531)] + !Window.IsActive(2006) + !Window.IsActive(weather) + [!Control.IsVisible(550) + !Control.IsVisible(551)] | Window.IsActive(2003)]</visible>
					<include>transition_BG</include>
				</control>
				<!--vignette default opacity-->
				<control type="image">
					<include>screen_Dimensions</include>
					<texture background="true">overlays/base_color_png</texture>
			<colordiffuse>base_1</colordiffuse> 
					<visible>![Window.IsActive(2) + Control.IsVisible(531)] + !Window.IsActive(2006) + Skin.HasSetting(fanart.global.alt)</visible>
					<include>transition_BG</include>
				</control>
			</control>
			<!--global background-->
			<control type="image">
				<aspectratio>stretch</aspectratio>
				<include>screen_Dimensions</include>
				<texture background="true">overlays/background.png</texture>
				<visible>!Skin.HasSetting(background.opacity.enabled) + [![Window.IsActive(2) + Control.IsVisible(531)] + !Window.IsActive(2006)] + !Window.IsActive(weather)</visible>
				<include>transition_BG</include>
			</control>
			<!--global background refocus-->
			<control type="image">
				<aspectratio>stretch</aspectratio>
				<include>screen_Dimensions</include>
				<texture background="true">overlays/base_color_refocus.png</texture>
				<visible>!Skin.HasSetting(basecolorrefocus.opacity.enabled) + [![Window.IsActive(2) + Control.IsVisible(531)] + !Window.IsActive(2006)] + !Window.IsActive(weather)</visible>
				<include>transition_BG</include>
			</control>
			<!--global background Conq-->
			<control type="image">
				<aspectratio>stretch</aspectratio>
				<include>screen_Dimensions</include>
				<texture background="true">overlays/conq.png</texture>
				<visible>!Skin.HasSetting(conq.opacity.enabled) + [![Window.IsActive(2) + Control.IsVisible(531)] + !Window.IsActive(2006)] + !Window.IsActive(weather)</visible>
				<include>transition_BG</include>
			</control>			
			<!--vignette-->
			<control type="image">
				<include>screen_Dimensions</include>
				<texture background="true">overlays/base_color.png</texture>
				<visible>!Skin.HasSetting(background.opacity.enabled) + [![Window.IsActive(2) + Control.IsVisible(531)] + !Window.IsActive(2006)] + Skin.HasSetting(fanart.global.alt)</visible>
				<include>transition_BG</include>
			</control>		
	</include>
</includes>